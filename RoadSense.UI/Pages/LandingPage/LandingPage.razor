@page "/"
@using RoadSense.UI.Pages.Dialogs
@using RoadSense.UI.Pages.LandingPage
@using System.Security.Claims

@inherits LandingPageBase
@inject IDialogService DialogService

<div class="landing-page">
    <div class="content p-0">
        <!-- Top Bar Section (Fixed) -->
        <header class="top-bar">
            <div class="container">
                <a href="#" class="logo">
                    <img src="/images/Roadsensor_ICON.png" style="object-fit: contain;" width="65" />
                </a>
                <ul class="links">
                    <li><a class="text-light" href="#about-us">About Us</a></li>
                    <li><a class="text-light" href="#service-gallery">Services</a></li>
                    <li class="text-light" @onclick="@(() => OpeForm("LOGIN"))">Login</li>
                    <li class="book" @onclick="@(() => OpeForm("SIGN UP"))">Sign Up</li>

                    @*  <MudBadge Content="100" Color="Color.Success" Overlap="true" Bordered="true">
                        <MudAvatar Color="Color.Default" Variant="Variant.Text">
                            <MudMenu Style="z-index: 100" Icon="@Icons.Material.Filled.AccountCircle"
                                     Color="Color.Primary"
                                     AriaLabel="Open user menu"
                                     Size="Size.Large">
                                <MudMenuItem>Profile</MudMenuItem>
                                <MudMenuItem>My dashboard</MudMenuItem>
                                <MudMenuItem>Appointment's</MudMenuItem>
                                <MudMenuItem>Logout</MudMenuItem>
                            </MudMenu>
                        </MudAvatar>
                    </MudBadge> *@
                </ul>
            </div>
        </header>

        <!-- Hero Section -->
        <div class="hero-section">
            <div class="container">
                <div class="info">
                    <h1><span class="text-light">Road</span><span class="text-danger">Sense</span></h1>
                    <p class="text-light">Monitor, Detect and Respond to Traffic Violations in Real Time.</p>
                    <button class="signup" @onclick="@(() => OpeForm("SIGN UP"))">
                        @*   <span class="mr-2">
                            <img src="/images/icons8-playstore-48.png" alt="Play Store" />
                        </span> *@
                        Sign up
                    </button>
                </div>
            </div>
        </div>
    </div>

    <section id="about-us" class="about-us">
        <div class="container">
            <div class="row align-items-start">
                <div class="col-md-6 text-center">
                    <img src="/images/plate-rec.png"
                    alt="About Us"
                    class="img-fluid" />
                </div>
                <div class="col-md-6">
                    <div id="subheading" class="subheading">About Us</div>

                    <h2>RoadSense Team</h2>
                    <p>
                        We are a team of dedicated innovators committed to enhancing road safety
                        through real-time traffic monitoring. Our goal is to reduce overspeeding
                        and unnecessary honking, ensuring a safer environment for school zones.
                    </p>
                    <p>
                        With state-of-the-art technology, including YOLOv8 for license plate
                        recognition, speed detection, and honk violation monitoring, we strive for
                        excellence in traffic regulation and public safety. At RoadSense, we believe
                        in using smart technology to promote responsible driving and protect communities.
                    </p>
                    <a href="#more" class="learn-more">Learn more <MudIcon Icon="@Icons.Material.Filled.ArrowRightAlt" Color="Color.Primary"></MudIcon></a>
                </div>
            </div>
        </div>
    </section>

    <h1 class="mt-5 service-text">Our Services</h1>
    <section id="service-gallery" class="service-gallery">
        <div class="container">
            <MudGrid Justify="Justify.Center" Style="min-height: 300px; display: flex; flex-wrap: wrap;  margin-top: 50px;">
                @foreach (var item in Services)
                {
                    <MudItem xs="12" sm="12" md="6" lg="4" Style="display: flex; justify-content: center;">
                        <div class="contact-btn">
                            <MudCard Class="service-content" Elevation="2" Style="width: 340px; position: relative; align-self: center;">
                                <MudCardMedia Image="@item.ImageSrc" Height="200" />
                                <MudCardContent Style="height: 200px; margin-top: 10px;">
                                    <MudText Class="fw-bolder" Typo="Typo.h5" Style="font-family: 'Poppins', sans-serif !important;">@item.Title</MudText>
                                    <MudText Class="mt-4" Typo="Typo.body2" Style="font-family: 'Poppins', sans-serif !important;">@item.Details</MudText>
                                </MudCardContent>
                            </MudCard>
                        </div>
                    </MudItem>
                }
            </MudGrid>
        </div>
    </section>

    <section class="all-rights">
        <div class="container">
            <div class="d-flex justify-content-center">
                <p class="footer-menu-item">
                    RoadSense © Copyright | Designed & Developed by Angel Mae Lagare
                </p>
            </div>
        </div>
    </section>
</div>



@code {

    [CascadingParameter] private Task<AuthenticationState> AuthStateTask { get; set; }
    [Inject] NavigationManager NavManager { get; set; }

    private ClaimsPrincipal user = new();

    private Task OpeForm(string title)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        return DialogService.ShowAsync<LoginDialog>(title, options);
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateTask;
        user = authState.User;

        if(user.Identity.IsAuthenticated){
            NavManager.NavigateTo("/dashboard");
        }
    }
}